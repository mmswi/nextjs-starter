import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import { useSelector } from 'react-redux';

import { TYPES } from 'app/client/container/types';
import { wrapper } from 'app/client/store';
import { selectProfile, setProfileData } from 'app/client/store/slices/profile';
import styles from '../styles/components/Home.module.scss';
import { UserServiceInterface } from 'app/client/container/interfaces/user.service.interface';
import { appContainer } from 'app/client/container';
import { ProductServiceInterface } from 'app/client/container/interfaces/product.service.interface';

const Home: NextPage = (props: any) => {
  const profile = useSelector(selectProfile);


  const userService = appContainer.get<UserServiceInterface>(TYPES.UserService);
  const productService = appContainer.get<ProductServiceInterface>(TYPES.ProductService);

  const [user, setUser] = useState({}) as any;
  const [favs, setFavs] = useState(null) as any;

  const getFavourites = async () => {
    const favourites = await productService.getUserFavourites('abcd');
    console.log('favourites ', favourites);
    setFavs(favourites);
  };

  useEffect(() => {
    userService.getModel('abc').then((response: any) => {
      console.log('response is ', response);
      setUser(response);
    });
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://featuringcode.com">Featuring Code</a>, {profile.name}
        </h1>

        <br />
        <br />

        <h1 className={styles.title}>Got model for user: {user.name}</h1>

        <div>
          The user favourites {favs} <br />
          <button onClick={getFavourites}>Get Favs</button>
        </div>


        <p className={styles.description}>
        Go to <Link href="/profile">
            <a>Profile</a>
          </Link> {' | '}
          <Link href="/product">
            <a>Product</a>
          </Link>
        </p>

        <p>{props.data}</p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export const getServerSideProps = wrapper.getServerSideProps(store => async ({ query }) => {
  console.log('store state on the server before dispatch', store.getState());
  store.dispatch(setProfileData('mihai'));
  console.log('store state on the server after dispatch', store.getState());

  const data = query.data || 'default data';
  //  http://localhost:3000?data='some-data'

  return {
    props: {
      data
    } // will be passed to the page component as props
  };
});

export default Home;
